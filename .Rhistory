main =  "")
qqline(y = income)
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(a = mean(income), b = sd(income), lwd = 2)
ggplot(data = state, mapping = aes(sample = income)) +
geom_qq(distribution = stats::qnorm) +
geom_qq_line(distribution = stats::qnorm) +
xlab("Theoretical normal quantiles") +
ylab("Samples quantiles")
ggplot(data = states, mapping = aes(sample = income)) +
geom_qq(distribution = stats::qnorm) +
geom_qq_line(distribution = stats::qnorm) +
xlab("Theoretical normal quantiles") +
ylab("Samples quantiles")
qqnorm(y = income,
ylim = c(3000, 6500),
main =  "Normal QQ plot for State Income in 1974 (base R)")
qqline(y = income)
shapiro.test(income)
path <- "states.csv"
states <- read.csv(path)
income <- states[[3]]
income
length <- length(income)
length
class(income)
colnames(states[3])
another_state <- as.data.frame(states)
another_state
View(states)
head(income)
typeof(income)
boxplot(income)
cinome
income
income <-stats[, 3]
income <-states[, 3]
income
r version
version
??lm
?linearizeMlist
library(tidyverse)
library(dplyr)
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f <- factor(x = mtcars$gear, labels = c("3 forward gears", "4 forward gears", "5 forward gears"), levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl, labels = c("4 cylinders", "6 cylinders", "8 cylinders"), levels = c(4, 6, 8)))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Motor Trend"))
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f = factor(x = mtcars$gear, labels = c("3 forward gears", "4 forward gears", "5 forward gears"), levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl, labels = c("4 cylinders", "6 cylinders", "8 cylinders"), levels = c(4, 6, 8)))
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f = factor(x = mtcars$gear, labels = c("3 forward gears", "4 forward gears", "5 forward gears"), levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl, labels = c("4 cylinders", "6 cylinders", "8 cylinders"), levels = c(4, 6, 8)))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Motor Trend"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
# ?mtcars
## The mtcars is mainly talk about of 11 aspects of automobile design and
## performance for 32 automobiles. It has several numeric variables such as mpg,
# of cylinders, displacement, gross horsepower, Rear axle ratio, weight, 1/4
## mile time, engine, transmission, # of forward gears, # of carburetors.
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Number of cylinders") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar() +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
position = "stack"
position = "stack"
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
# mtcars is a list, it is already a data frame.
## mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
demo()
library(tidyverse)
library(dplyr)
library(tidyverse)
library(dplyr)
# typeof(mtcars)
mtcars <- mtcars
class(mtcars)
# mtcars is a list, it is already a data frame.
## mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
# ?mtcars
## The mtcars is mainly talk about of 11 aspects of automobile design and
## performance for 32 automobiles. It has several numeric variables such as mpg,
# of cylinders, displacement, gross horsepower, Rear axle ratio, weight, 1/4
## mile time, engine, transmission, # of forward gears, # of carburetors.
str(mtcars)
## It can be seen that vs is categorical, because it is a nominal type of data
## with only 0 = V-shaped, and 1 = straight options. am is also categorical,
## because it is only 0 = automatic, and 1 = manual options .
plot(x = mtcars$hp,
y = mtcars$mpg,
cex = 1.5,
bg = 2,
col = "blue",
xlab = "Horsepower",
ylab = "Miles Per Gallon",
main = "1974 Motor Trend")
lm1 <- lm(formula = mtcars$mpg ~ mtcars$hp, data = mtcars)
abline(lm1, col = "steelblue", lty = 2, lwd = 2)
mtcars %>%
ggplot(aes(x = hp, y = mpg)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed") +
geom_point(cex = 1.5, col = "blue") +
xlab("Horsepower") +
ylab("Miles Per Gallon") +
ggtitle("1974 Motor Trend")
mtcars %>%
ggplot(aes(x = factor(am), y = mpg)) +
geom_violin() +
geom_boxplot(width = .1)  +
xlab("transmission type") +
ylab("miles per gallon") +
ggtitle("1974 Motor Trend")
?mtcars
str(mtcars)
mtcars
?state
state.abb
state.area
state.center
state.division
state.name
state.region
state.x77
class(state.x77)
df <- data.frame(state.x77)
df
str(df)
df <- data.frame(df, abb = state.abb, regn = state.region)
str(df)
df <- mutate(df,
Murder_C = ntile(Murder, 2),
Life.Exp_C = ntile(Life.Exp, 4))
str(df)
df$Murder_C M- factor(df$Murder_C,
df$Murder_C M <- factor(df$Murder_C,
df$Murder_C <- factor(df$Murder_C,
level = c(1, 2),
labels = c("Low", "High"))
df$Life.Exp_C <- factor(df$Life.Exp_C,
levels = c(1, 2, 3, 4),
labels = c("Lowest", "Low", "high", "Highest"))
str(df)
table(df$Murder_C)
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder))
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder)) +
geom_line()
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder)) +
geom_point()
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder)) +
geom_text()
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder)) +
geom_text(label = abb)
ggplot(data = df, mapping = aes(x = Life.Exp, y = Murder)) +
geom_text(label = df$abb)
str(df)
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
library(tidyverse)
library(dplyr)
# typeof(mtcars)
mtcars <- mtcars
class(mtcars)
# mtcars is a list, it is already a data frame.
## mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
# ?mtcars
## The mtcars is mainly talk about of 11 aspects of automobile design and
## performance for 32 automobiles. It has several numeric variables such as mpg,
# of cylinders, displacement, gross horsepower, Rear axle ratio, weight, 1/4
## mile time, engine, transmission, # of forward gears, # of carburetors.
str(mtcars)
## It can be seen that vs is categorical, because it is a nominal type of data
## with only 0 = V-shaped, and 1 = straight options. am is also categorical,
## because it is only 0 = automatic, and 1 = manual options .
plot(x = mtcars$hp,
y = mtcars$mpg,
cex = 1.5,
bg = 2,
col = "blue",
xlab = "Horsepower",
ylab = "Miles Per Gallon",
main = "1974 Motor Trend")
lm1 <- lm(formula = mtcars$mpg ~ mtcars$hp, data = mtcars)
abline(lm1, col = "steelblue", lty = 2, lwd = 2)
mtcars %>%
ggplot(aes(x = hp, y = mpg)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed") +
geom_point(cex = 1.5, col = "blue") +
xlab("Horsepower") +
ylab("Miles Per Gallon") +
ggtitle("1974 Motor Trend")
mtcars %>%
ggplot(aes(x = factor(am), y = mpg)) +
geom_violin() +
geom_boxplot(width = .1)  +
xlab("transmission type") +
ylab("miles per gallon") +
ggtitle("1974 Motor Trend")
## the plot has shown different types of eith automatic transmission or manual transmission. The 0 represents automatic transmission, which has a higher density on its median point in which it can make to 17.5 miles per gallon during its transmission. And for the manual transmission, it has almost 22.5 miles per gallon during its manual transmission and most of the data are gathered around 22.5. It can be told that automatic and manual transmission have the different trend of mpg.
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f = factor(x = mtcars$gear,
labels = c("3 forward gears", "4 forward gears", "5 forward gears"),
levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl,
labels = c("4 cylinders", "6 cylinders", "8 cylinders"),
levels = c(4, 6, 8)))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
str(mtcars)
?mtcars
mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V-shaped", "straight")))
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V-shaped", "straight")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(label = vs_c)
r
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V-shaped", "straight")))
View(mtcars)
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(label = vs_c)
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c))
library(tidyverse)
library(dplyr)
# typeof(mtcars)
mtcars <- mtcars
class(mtcars)
# mtcars is a list, it is already a data frame.
## mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
# ?mtcars
## The mtcars is mainly talk about of 11 aspects of automobile design and
## performance for 32 automobiles. It has several numeric variables such as mpg,
# of cylinders, displacement, gross horsepower, Rear axle ratio, weight, 1/4
## mile time, engine, transmission, # of forward gears, # of carburetors.
str(mtcars)
## It can be seen that vs is categorical, because it is a nominal type of data
## with only 0 = V-shaped, and 1 = straight options. am is also categorical,
## because it is only 0 = automatic, and 1 = manual options .
plot(x = mtcars$hp,
y = mtcars$mpg,
cex = 1.5,
bg = 2,
col = "blue",
xlab = "Horsepower",
ylab = "Miles Per Gallon",
main = "1974 Motor Trend")
lm1 <- lm(formula = mtcars$mpg ~ mtcars$hp, data = mtcars)
abline(lm1, col = "steelblue", lty = 2, lwd = 2)
mtcars %>%
ggplot(aes(x = hp, y = mpg)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed") +
geom_point(cex = 1.5, col = "blue") +
xlab("Horsepower") +
ylab("Miles Per Gallon") +
ggtitle("1974 Motor Trend")
mtcars %>%
ggplot(aes(x = factor(am), y = mpg)) +
geom_violin() +
geom_boxplot(width = .1)  +
xlab("transmission type") +
ylab("miles per gallon") +
ggtitle("1974 Motor Trend")
## the plot has shown different types of eith automatic transmission or manual transmission. The 0 represents automatic transmission, which has a higher density on its median point in which it can make to 17.5 miles per gallon during its transmission. And for the manual transmission, it has almost 22.5 miles per gallon during its manual transmission and most of the data are gathered around 22.5. It can be told that automatic and manual transmission have the different trend of mpg.
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f = factor(x = mtcars$gear,
labels = c("3 forward gears", "4 forward gears", "5 forward gears"),
levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl,
labels = c("4 cylinders", "6 cylinders", "8 cylinders"),
levels = c(4, 6, 8)))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V", "S")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c))
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V", "S")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = 'TRUE',
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = TRUE,
color = "steelblue", linetype = "dashed")
FALSE
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = gear_c, color = cyl_c)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
View(mtcars)
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = gear_f, color = cyl_f)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = FALSE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(color = guide_legend(override.aes = list(size = 5, pch = 15)))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(color = guide_legend(title = "Number of cylinders")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders"))
