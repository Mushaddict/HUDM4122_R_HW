numList <- list(c(1:10), seq(from = 0, to = 100, by = 10, seq(from = 1, to = 9, by = 2), each = 10))
numList <- list(c(1:10), seq(from = 0, to = 100, by = 10), seq(from = 1, to = 9, by = 2), each = 10))
numList <- list(c(1:10), seq(from = 0, to = 100, by = 10),  rep(x = seq(from = 1, to = 9, by = 2), each = 10))
View(numList)
path <- "states.csv"
states <- read.csv(path)
boxplot(income,
horizontal = TRUE,
xlab = "US states Income in 1974")
path <- "states.csv"
states <- read.csv(path)
income <- states[[3]]
income
length <- length(income)
length
class(income)
colnames(states[3])
## the 5th element
states[5, ]
## the 50th element
states[50, ]
## 40th through 50th elements
states[40:50, ]
boxplot(income,
horizontal = TRUE,
xlab = "US states Income in 1974")
median(income)
quantile(income, probs = c(.25, .5, .75))
## so we have IQR = .75 - .25
IQR <- 4813.50 - 3992.75
IQR
boxplot(income,
horizontal = TRUE,
xlab = "US states Income in 1974")
median(income)
quantile(income, probs = c(.25, .5, .75))
## so we have IQR = .75 - .25
IQR <- 4813.50 - 3992.75
IQR
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot()
boxplot(income,
horizontal = TRUE,
xlab = "US states Income in 1974 (base R plot")
library(ggplot2)
ggplot(data = income, mapping = aes(x = income)) +
geom_boxplot()
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot()
library(ggplot2)
ggplot(data = states, mapping = aes(x = income),
xlab = "US states income in 1974 (ggplot)") +
geom_boxplot()
library(ggplot2)
ggplot(data = states, mapping = aes(x = income),
main = "US states income in 1974 (ggplot)") +
geom_boxplot()
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot() +
xlab = "US"
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot() +
#  xlab = "US"
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot()
#  xlab = "US"
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot() +
xlab("US")
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot() +
xlab("US states income in 1974 (ggplot2)")
median(income)
quantile(income, probs = c(.25, .5, .75))
## so we have IQR = .75 - .25
IQR <- 4813.50 - 3992.75
IQR
median(income)
quantile(income, probs = c(.25, .5, .75))
## so we have IQR = .75 - .25
# So Q1 = 3992.75, Q2 = 4519, Q3 = 4813.5
IQR <- 4813.50 - 3992.75
IQR
# So we have IQR = Q3 - Q1 = 820.75
# so the lower fence should be Q1 - 1.5 * IQR, which is:
lower_fence <- 3992.75 - 1.5 * 820.75
lower_fence
sort(income)
median(income)
quantile(income, probs = c(.25, .5, .75))
## so we have IQR = .75 - .25
# So Q1 = 3992.75, Q2 = 4519, Q3 = 4813.5
IQR <- 4813.50 - 3992.75
IQR
# So we have IQR = Q3 - Q1 = 820.75
# so the lower fence should be Q1 - 1.5 * IQR, which is:
lower_fence <- 3992.75 - 1.5 * 820.75
lower_fence
# And upper fence should be Q3 + 1.5 * IQR, which is:
upper_fence <- 4813.50 + 1.5 * 820.75
upper_fence
income
sort(income)
plot(income)
plot(sort(income))
range(income)
hist(income, breaks = seq(3000, 6500, 500),
xlab = "US states income in 1974 (base R histogram)",
main = "Frequency histogram with 7 bins")
hist(income, breaks = seq(3000, 6500, 500),
xlab = "US states income in 1974 (base R histogram)",
main = "Frequency histogram with 7 bins")
hist(income, breaks = seq(3000, 6500, 500),
xlab = "US states income in 1974 (base R histogram)",
main = "Frequency histogram with 7 bins")
boxplot(income,
horizontal = TRUE,
xlab = "Incomes",
main = "US states Income in 1974 (base R plot)")
library(ggplot2)
ggplot(data = states, mapping = aes(x = income)) +
geom_boxplot() +
xlab("Incomes") +
ggtitle("US states income in 1974 (ggplot2)")
boxplot(income,
horizontal = TRUE,
xlab = "Incomes",
main = "US states Income in 1974 (base R plot)")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 500)) +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 500),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 250),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 300),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 500),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 500),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 7 bins")
hist(income, breaks = seq(3000, 6500, 500),
xlab = "US states income in 1974 (base R histogram)",
main = "Frequency histogram with 7 bins")
ggplot(data = states, mapping = aes(x = income)) +
geom_histogram(breaks = seq(3000, 6500, 250),
col = "red", fill = "cadetblue3") +
xlab("US states income in 1974 (base R histogram)") +
ggtitle("Frequency histogram with 14 bins")
density(income)
plot(density(income),
xlab = "US states income in 1974 (base R histogram)",
main = "Kernal Density plots")
ggplt(data = states, mapping = aes(x = income)) +
geom_density(col = "steelblue", lwd = 1.05) +
xlab("US states income in 1974 (ggplot2 histogram)") +
ggtitle("Kernal Density plot")
ggplot(data = states, mapping = aes(x = income)) +
geom_density(col = "steelblue", lwd = 1.05) +
xlab("US states income in 1974 (ggplot2 histogram)") +
ggtitle("Kernal Density plot")
plot(density(income),
xlab = "US states income in 1974 (base R histogram)",
main = "Kernal Density plot")
plot(states, sort(income))
quant1 <- qnorm(p = income)
quant1
quant1 <- qnorm(p = seq(0.005, 0.995, 0.01))
quant1
vec1 <- rnorm(n = 100, mean = 100, se = 15)
vec1 <- rnorm(n = 100, mean = 100, sd = 15)
vect1
vec1
vec1
plot(quant1, sort(vec1))
set.seed(1234)
incomes
income
mean(income)
sd(income)
vec1 <- rnorm(n = 50, mean = 4435.8, sd = 614.4699)
vec1
vec1
set.seed(1111)
vec1 <- rnorm(n = 50, mean = 4435.8, sd = 614.4699)
vec1
set.seed(1234)
vec1 <- rnorm(n = 50, mean = 4435.8, sd = 614.4699)
vec1
plot(income, sort(vec1))
plot(sort(income), sort(vec1))
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
quant1
plot(quant1, sort(income))
abline(a = 6000, b = sd(income), lwd = 2)
abline(a = 50, b = sd(income), lwd = 2)
abline(a = 50, b = sd(income), lwd = 2)
abline(a = 5500, b = sd(income), lwd = 2)
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
plot(sort(income))
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(sort(income))
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(plot(sort(income)))
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
mean(income)
abline(a = mean(income), b = sd(income), lwd = 2)
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(a = mean(income), b = sd(income), lwd = 2)
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(a = mean(income), b = sd(income), lwd = 2)
qqnorm(y = income,
ylim = c(-10000, 25000),
main =  "")
qqnorm(y = income,
ylim = c(3000, 6500),
main =  "")
qqnorm(y = income,
ylim = c(3000, 6500),
main =  "")
qqline(y = income)
# generate a random seed
set.seed(1234)
# generate a sequence of 50 qnorms num
quant1 <- qnorm(p = seq(0.02, 1, 0.02))
plot(quant1, sort(income),
xlab = "Normal quantiles for 50 points",
ylab = "Incomes",
main = "Normal QQ plot")
abline(a = mean(income), b = sd(income), lwd = 2)
ggplot(data = state, mapping = aes(sample = income)) +
geom_qq(distribution = stats::qnorm) +
geom_qq_line(distribution = stats::qnorm) +
xlab("Theoretical normal quantiles") +
ylab("Samples quantiles")
ggplot(data = states, mapping = aes(sample = income)) +
geom_qq(distribution = stats::qnorm) +
geom_qq_line(distribution = stats::qnorm) +
xlab("Theoretical normal quantiles") +
ylab("Samples quantiles")
qqnorm(y = income,
ylim = c(3000, 6500),
main =  "Normal QQ plot for State Income in 1974 (base R)")
qqline(y = income)
shapiro.test(income)
path <- "states.csv"
states <- read.csv(path)
income <- states[[3]]
income
length <- length(income)
length
class(income)
colnames(states[3])
another_state <- as.data.frame(states)
another_state
View(states)
head(income)
typeof(income)
boxplot(income)
cinome
income
income <-stats[, 3]
income <-states[, 3]
income
r version
version
??lm
?linearizeMlist
