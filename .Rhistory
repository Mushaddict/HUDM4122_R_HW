# STA_mean <- mean(STA$dispatch_duration)
#
# IC <- jcpd %>%
#   filter(call_type == "IC")
# IC_mean <- mean(IC$dispatch_duration)
jcpd %>%
group_by(call_type) %>%
summarize(mean(dispatch_duration))
receive <- strftime(jcpd$time_received, "%y-%m-%d %H:%M:%S")
dispatch <- strftime(jcpd$time_dispatched, "%y-%m-%d %H:%M:%S")
new_receive <- strptime(receive, "%y-%m-%d %H:%M:%S")
new_dispatch <- strptime(dispatch, "%y-%m-%d %H:%M:%S")
dispatch_duration <- new_dispatch - new_receive
# dispatch_duration
jcpd <- jcpd %>%
mutate(dispatch_duration)
unique(jcpd$call_type)
library(dplyr)
# I will use filter to calculate the differnt mean for different call type
# SI <- jcpd %>%
#   filter(call_type == "SI")
# SI_mean <- mean(SI$dispatch_duration)
#
# PH <- jcpd %>%
#   filter(call_type == "PH")
# PH_mean <- mean(PH$dispatch_duration)
#
# C911 <- jcpd %>%
#   filter(call_type == "911")
# mean_911 <- mean(C911$dispatch_duration)
#
# MVS <- jcpd %>%
#   filter(call_type == "MVS")
# MVS_mean <- mean(MVS$dispatch_duration)
#
# STA <- jcpd %>%
#   filter(call_type == "STA")
# STA_mean <- mean(STA$dispatch_duration)
#
# IC <- jcpd %>%
#   filter(call_type == "IC")
# IC_mean <- mean(IC$dispatch_duration)
jcpd %>%
group_by(call_type) %>%
summarize(mean(jcpd$dispatch_duration))
unique(jcpd$call_type)
library(dplyr)
# I will use filter to calculate the differnt mean for different call type
# SI <- jcpd %>%
#   filter(call_type == "SI")
# SI_mean <- mean(SI$dispatch_duration)
#
# PH <- jcpd %>%
#   filter(call_type == "PH")
# PH_mean <- mean(PH$dispatch_duration)
#
# C911 <- jcpd %>%
#   filter(call_type == "911")
# mean_911 <- mean(C911$dispatch_duration)
#
# MVS <- jcpd %>%
#   filter(call_type == "MVS")
# MVS_mean <- mean(MVS$dispatch_duration)
#
# STA <- jcpd %>%
#   filter(call_type == "STA")
# STA_mean <- mean(STA$dispatch_duration)
#
# IC <- jcpd %>%
#   filter(call_type == "IC")
# IC_mean <- mean(IC$dispatch_duration)
jcpd %>%
group_by(call_type) %>%
summarize(mean(dispatch_duration))
??tidyverse
?tidyverse
typeof(mtcars)
mtcars
# mtcars is a list
mtcars <- data.frame(mtcars)
mtcars
typeof(mtcars)
typeof(mtcars)
typeof(mtcars)
typeof(mtcars)
# mtcars is a list
mtcars <- as.data.frame(mtcars)
typeof(mtcars)
# mtcars is a list
mtcars <- as.data.frame(mtcars)
typeof(mtcars)
# mtcars is a list
mtcars <- data.frame(matrix(unlist(mtcars)))
mtcars
typeof(mtcars)
mtcars
typeof(mtcars)
mtcars
unlist(mtcars)
mtcars
matrix(unlist(mtcars), nrow = length(mtcars), byrow = (mtcars))
matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE)
typeof(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
typeof(data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE)))
# mtcars is a list, it is not a data frame yet.
mtcars
# mtcars is a list, it is already a data frame.
mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
mtcars
mtcars
?mtcars
str(mtcars)
?plotmath
library(graphics)
x <- seq(-4, 4, length.out = 101)
y <- cbind(sin(x), cos(y))
y <- cbind(sin(x), cos(x))
matplot(x, y)
plot(x, y)
plot(x)
plot(y)
y
?matplot
matplt(x)
matplot(x)
matplot(y)
matplot(x, y)
llls
acu <- read.csv("D:\CU TC\hudm 5026 intro to R\HUDM5026_R_HW/acupuncture.csv")
acu <- read.csv("D:/CU TC/hudm 5026 intro to R/HUDM5026_R_HW/acupuncture.csv")
getwd()
ls
ls
getwd()
setwd("D:/CU\ TC/hudm\ 5026\ intro\ to\ R/HUDM5026_R_HW")
getwd()
acu <- read.csv("acupuncture.csv")
acu <- read.csv("acupuncture.csv")
acu <- load("acupuncture.RData")
?ls
library(ggplot2)
load("acupuncture.Rdata")
## minimum
min(acupuncture$pk1, na.rm = TRUE)
min(acupuncture$pk5, na.rm = TRUE)
## 1st quantile
quantile(acupuncture$pk1, probs = 0.25)
quantile(acupuncture$pk5, probs = 0.25)
## median
median(acupuncture$pk1, na.rm = TRUE)
median(acupuncture$pk5, na.rm = TRUE)
## 3st quantile
quantile(acupuncture$pk1, probs = 0.75)
quantile(acupuncture$pk5, probs = 0.75)
## maximum
max(acupuncture$pk1, na.rm = TRUE)
max(acupuncture$pk5, na.rm = TRUE)
## @param acu acupuncture
## @return out min, q1st, median, q3st, max
call_out <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
}
call_out(acupuncture$age)
call_out(acupuncture$sex)
call_out(acupuncture$chronicity)
call_out(acupuncture$pk1)
call_out(acupuncture$pk5)
# by(data = acupuncture$age,
#    INDICES = acupuncture$group,
#    FUN = call_out,
#    na.rm = TRUE)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = "acupuncture pk",
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(t(out))
print(out)
}
## draw boxplot for pk1
box_plot(acupuncture$pk1)
## draw boxplot for pk5
box_plot(acupuncture$pk5)
acupuncture %>%
select(pk1, pk5) %>%
geom_boxplot()
library(tidyverse)
acupuncture %>%
select(pk1, pk5) %>%
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
geom_boxplot(aes(x = pk1))
acupuncture %>%
select(pk1, pk5) %>%
geom_boxplot(aes(x = .))
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = .))
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = pk1))
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = pk1))
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = pk1)) %>%
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = pk1)) +
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
ggplot(aes(x = c(pk1, pk5))) +
geom_boxplot()
acupuncture %>%
select(pk1, pk5) %>%
boxplot()
acupuncture %>%
select(pk1, pk5) %>%
box_plot()
acupuncture %>%
select(pk1, pk5) %>%
boxplot()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
acu <- read.csv("acupuncture.csv")
## mean for each element
apply(acu, MARGIN = 2, mean)
## sd for each element
apply(acu, MARGIN = 2, sd)
by(
data = acu$pk5,
INDICES = acu$group,
FUN = mean
)
## It cannot be concluded about efficacy by only telling the relationship of group and severity of pk5. It needs more information other than groups.
diff <- acu$pk5 - acu$pk1
diff
remission <- ifelse(diff <= -10, 1, 0)
remission
acu %>%
group_by(group) %>%
summarize(mean(pk5))
acu <- acu %>%
mutate(diff2 = pk5 - pk1)
acu$diff2
acu <- acu %>%
mutate(remission2 = ifelse(diff2 <= -10, 1, 0))
acu$remission2
plot(acu$pk1, acu$pk5, xlab = "PK1", ylab = "PK5",
main = "baseline headache severity rating vs 1-year headache severity rating")
acu %>%
ggplot(aes(x = pk1, y = pk5)) +
geom_point() +
xlab("PK1") +
ylab("PK5") +
ggtitle("aseline headache severity rating vs 1-year headache severity rating")
acu %>%
mutate(group = factor(x = group,
labels = c("Group 0", "Group 1"),
levels = c(0, 1)),
sex = factor(x = sex,
labels = c("male", "female"),
levels = c(0, 1))) %>%
ggplot(aes(x = pk1, y = pk5, color = group, shape = sex))  +
geom_point() +
scale_color_manual(values = c("#89ABE3FF", "#EA738DFF")) +
ggtitle("aseline headache severity rating vs 1-year headache severity rating")
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1"),
fill = c("red", "black")
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
fill = c("red", "black", "red", "black"),
pch = c(0, 0, 1, 1)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
col = c("red", "black", "red", "black"),
pch = c(0, 0, 1, 1)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
title = "Group and Sex",
col = c("red", "black", "red", "black"),
pch = c(0, 0, 1, 1)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "female", "male"),
title = "Group and Sex",
col = c("red", "black", "red", "black"),
pch = c(0, 0, 1, 1)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "female", "male"),
title = "Group and Sex",
col = c("red", "black", "red", "black"),
pch = c(0, 16, 1, 1)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "female", "male"),
title = "Group and Sex",
col = c("#89ABE3FF", "#EA738DFF", "black", "black"),
pch = c(16, 16, 1, 0)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "female", "male"),
title = "Group and Sex",
col = c("red", "black", "black", "black"),
pch = c(16, 16, 1, 0)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
title = "Group and Sex",
col = c("red", "black", "black", "black"),
pch = c(16, 16, 1, 0)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
title = "Group and Sex",
col = c("red", "black", "black", "black"),
pch = c(16, 16, 1, 22)
)
cols <- c("#89ABE3FF", "#EA738DFF")
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
title = "Group and Sex",
col = c("red", "black", "black", "black"),
pch = c(16, 16, 1, 0)
)
plot(acu$pk1~ acu$pk5, xlab = "PK1", ylab = "PK5",
col = factor(acu$sex),
pch = acu$group,
main = "baseline headache severity rating vs 1-year headache severity rating")
legend(
x = "bottomright",
legend = c("Group 0", "Group 1", "male", "female"),
title = "Group and Sex",
col = c("red", "black", "black", "black"),
pch = c(16, 16, 1, 0)
)
diff <- acu$pk5 - acu$pk1
acu <- mutate(acu, diff)
diff <- acu$pk5 - acu$pk1
acu <- mutate(acu, diff)
acu$diff
acu <- read.csv("acupuncture.csv")
## mean for each element
apply(acu, MARGIN = 2, mean)
## sd for each element
apply(acu, MARGIN = 2, sd)
by(
data = acu$pk5,
INDICES = acu$group,
FUN = mean
)
## It cannot be concluded about efficacy by only telling the relationship of group and severity of pk5. It needs more information other than groups.
colnames(acu)
diff <- acu$pk5 - acu$pk1
acu <- mutate(acu, diff)
acu$diff
names(acu)
acu <- mutate(acu, remission <- ifelse(diff <= -10, 1, 0))
acu$remission
library(tidyverse)
library(car)
decath <- read.csv("decath.csv")
is_tibble(decath)
## The deacth is not tibble, it returns false when I use is_tibble(), because decath is a data frame.
print(decath)
# print(tbl_df(decath), n = 33)
# print(tbl_df(decath), n = 33)
abs(round(cov(decath), 2))
abs(round(cor(decath), 2))
## covariance of each element of decath
round(cov(decath), 2)
correlation<-round(cor(decath),2)
colname<-colnames(correlation)
rowname<-rownames(correlation)
for (c in 1:10){
for(r in 1:10){
if(abs(correlation[r,c])>0.5){
if(r<c){
print(paste(colname[c],rowname[r],correlation[r,c]),)
}
}
}
}
covariance <-round(cov(decath),2)
correlation<-round(cor(decath),2)
colname<-colnames(correlation)
rowname<-rownames(correlation)
for (c in 1:10){
for(r in 1:10){
if(abs(covariance[r,c])>0.5){
if(r<c){
print(paste(colname[c],rowname[r],covariance[r,c]),)
}
}
}
}
par(mfrow = c(2, 2))
plot(decath$disq, decath$poid,
xlab = "discus", ylab = "shot out")
plot(decath$poid, decath$jave,
xlab = "shot put", ylab = "javelin")
plot(decath$disq, decath$jave,
xlab = "discus", ylab = "javelin")
hist(decath$poid, xlab = "shot put", main = "Histogram of shot put")
