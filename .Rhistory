# typeof(mtcars)
mtcars <- mtcars
class(mtcars)
# mtcars is a list, it is already a data frame.
## mtcars <- data.frame(matrix(unlist(mtcars), nrow = length(mtcars), byrow = TRUE))
# ?mtcars
## The mtcars is mainly talk about of 11 aspects of automobile design and
## performance for 32 automobiles. It has several numeric variables such as mpg,
# of cylinders, displacement, gross horsepower, Rear axle ratio, weight, 1/4
## mile time, engine, transmission, # of forward gears, # of carburetors.
str(mtcars)
## It can be seen that vs is categorical, because it is a nominal type of data
## with only 0 = V-shaped, and 1 = straight options. am is also categorical,
## because it is only 0 = automatic, and 1 = manual options .
plot(x = mtcars$hp,
y = mtcars$mpg,
cex = 1.5,
bg = 2,
col = "blue",
xlab = "Horsepower",
ylab = "Miles Per Gallon",
main = "1974 Motor Trend")
lm1 <- lm(formula = mtcars$mpg ~ mtcars$hp, data = mtcars)
abline(lm1, col = "steelblue", lty = 2, lwd = 2)
mtcars %>%
ggplot(aes(x = hp, y = mpg)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed") +
geom_point(cex = 1.5, col = "blue") +
xlab("Horsepower") +
ylab("Miles Per Gallon") +
ggtitle("1974 Motor Trend")
mtcars %>%
ggplot(aes(x = factor(am), y = mpg)) +
geom_violin() +
geom_boxplot(width = .1)  +
xlab("transmission type") +
ylab("miles per gallon") +
ggtitle("1974 Motor Trend")
## the plot has shown different types of eith automatic transmission or manual transmission. The 0 represents automatic transmission, which has a higher density on its median point in which it can make to 17.5 miles per gallon during its transmission. And for the manual transmission, it has almost 22.5 miles per gallon during its manual transmission and most of the data are gathered around 22.5. It can be told that automatic and manual transmission have the different trend of mpg.
# add factor version as gear_f and cyl_f
mtcars <- mtcars %>%
mutate(gear_f = factor(x = mtcars$gear,
labels = c("3 forward gears", "4 forward gears", "5 forward gears"),
levels = c(3, 4, 5)),
cyl_f = factor(x = mtcars$cyl,
labels = c("4 cylinders", "6 cylinders", "8 cylinders"),
levels = c(4, 6, 8)))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "dodge") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = gear_f, fill = cyl_f)) +
geom_bar(position = "stack") +
xlab("Number of forward gears") +
ylab("Count Numbers") +
ggtitle("1974 Motor Trend") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V", "S")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c))
mtcars <- mtcars %>%
mutate(vs_c = factor(vs, levels = c(0, 1), labels = c("V", "S")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = 'TRUE',
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = TRUE,
color = "steelblue", linetype = "dashed")
FALSE
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y~x, se = FALSE,
color = "steelblue", linetype = "dashed")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = gear_c, color = cyl_c)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
View(mtcars)
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = gear_f, color = cyl_f)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = FALSE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg")
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(color = guide_legend(override.aes = list(size = 5, pch = 15)))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(color = guide_legend(title = "Number of cylinders")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders")))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders"))
mtcars %>%
ggplot(aes(x = mpg, y = hp)) +
geom_text(mapping = aes(label = vs_c, color = cyl_f), show.legend = TRUE) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
color = "steelblue", linetype = "dashed") +
xlab("Miles per Gallon") +
ylab("Horsepower") +
ggtitle("Engine's relation between horsepower and mpg with numbers of cylinder") +
guides(fill = guide_legend(title = "Number of cylinders"))
box_plot(acupuncture$pk1)
load("/Users/anshijie/Desktop/D/CU TC/HUDK 5026 intro R/HUDM5026_R_HW/acupuncture.Rdata")
library(ggplot2)
load("/Users/anshijie/Desktop/D/CU TC/HUDK 5026 intro R/HUDM5026_R_HW/acupuncture.Rdata")
load("/acupuncture.Rdata")
load("acupuncture.Rdata")
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
boxplot(acu, horizontal = TRUE)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
}
box_plot(acupuncture$pk1)
abline(a = min)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(a = min)
}
box_plot(acupuncture$pk1)
box_plot(acupuncture$pk1)
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(a = min)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(min)
}
box_plot(acupuncture$pk1)
colnames(acupuncture)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(v = min)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(v = min, lty = 2)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(v = min, lty = 2)
abline(v = q1st, lyt = 2)
abline(v = median, lyt = 2)
abline(v = q3st, lyt = 2)
abline(v = max, lyt = 2)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
out
boxplot(acu, horizontal = TRUE)
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE)
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = paste(acu),
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = paste(acu),
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
# text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
# ylab = paste(acu),
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
# text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = acu,
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
# text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = toString(acu),
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
# text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = "acupuncture pk",
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
# text(out)
}
box_plot(acupuncture$pk1)
?abline
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = "acupuncture pk",
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(out)
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = "acupuncture pk",
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(t(out))
}
box_plot(acupuncture$pk1)
box_plot <- function(acu) {
min <- min(acu, na.rm = TRUE)
q1st <- quantile(acu, probs = .25)
median <- quantile(acu, probs = .5)
q3st <- quantile(acu, probs = .75)
max <- max(acu, na.rm = TRUE)
out <- c(min, q1st, median, q3st, max)
boxplot(acu, horizontal = TRUE,
xlab = "number",
ylab = "acupuncture pk",
main = "box plot of acupuncture")
abline(v = min, lty = 2)
abline(v = q1st, lty = 2)
abline(v = median, lty = 2)
abline(v = q3st, lty = 2)
abline(v = max, lty = 2)
text(t(out))
}
## draw boxplot for pk1
box_plot(acupuncture$pk1)
## draw boxplot for pk5
box_plot(acupuncture$pk5)
## minimum
min(acupuncture$pk1, na.rm = TRUE)
min(acupuncture$pk5, na.rm = TRUE)
## 1st quantile
quantile(acupuncture$pk1, probs = 0.25)
quantile(acupuncture$pk5, probs = 0.25)
## median
median(acupuncture$pk1, na.rm = TRUE)
median(acupuncture$pk5, na.rm = TRUE)
## 3st quantile
quantile(acupuncture$pk1, probs = 0.75)
quantile(acupuncture$pk5, probs = 0.75)
## maximum
max(acupuncture$pk1, na.rm = TRUE)
max(acupuncture$pk5, na.rm = TRUE)
